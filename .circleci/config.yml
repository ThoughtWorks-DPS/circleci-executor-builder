---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@dev:latest

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

workflows:
  version: 2
  circleci-executor-builder-alpine-image-pipeline:
    jobs:
      - executor-tools/machine-executor-dev-release:
          name: alpine-dev-build
          context: twdps-di
          dockerfile: Dockerfile.alpine
          image: twdps/circleci-executor-builder
          tag: alpine-edge
          docker-cve-scan: true
          snyk-organization: twdps
          cis-docker-image-scan: true
          skip-base-image: true
          bats-test: true
          test-path: test/circleci_executor_builder_alpine.bats
          container-name: circleci-executor-builder-alpine-edge
          after-checkout:
            - run:
                name: inject environment variables
                command: |
                  secrethub inject -i secrethub.env -o $BASH_ENV
                  source $BASH_ENV
          filters: *on-push-main
          
      # - executor-tools/publish:
      #     shell: secrethub run -- /bin/sh -eo pipefail
      #     name: alpine-release
      #     context: twdps-di
      #     pull-tag: alpine-edge
      #     tag-annotation: alpine-
      #     image: twdps/circleci-executor-builder
      #     release-tag: alpine-stable
      #     filters: *on-tag-master        

  circleci-executor-builder-slim-image-pipeline:
    jobs:
      - executor-tools/machine-executor-dev-release:
          name: slim-dev-build
          context: twdps-di
          dockerfile: Dockerfile.slim
          image: twdps/circleci-executor-builder
          tag: slim-edge
          docker-cve-scan: true
          snyk-organization: twdps
          cis-docker-image-scan: true
          skip-base-image: true
          bats-test: true
          test-path: test/circleci_executor_builder_slim.bats
          container-name: circleci-executor-builder-slim-edge
          after-checkout:
            - run:
                name: inject environment variables
                command: |
                  secrethub inject -i secrethub.env -o $BASH_ENV
                  source $BASH_ENV
          filters: *on-push-main
          
  #     - executor-tools/publish:
  #         shell: secrethub run -- /bin/sh -eo pipefail
  #         name: slim-release
  #         context: twdps-di
  #         pull-tag: slim-edge
  #         tag-annotation: slim-
  #         image: twdps/di-circleci-base-image
  #         release-tag: slim-stable
  #         filters: *on-tag-master  

  # builds nightly from .unpinned Dockerfile in order to test the latest base image and installed packages
  # di-circleci-base-image-nightly-build:
  #   triggers:
  #     - schedule:
  #         cron: "0 0 * * 0"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - executor-tools/machine-executor-dev-release:
  #         name: nightly-alpine-build
  #         context: twdps-di
  #         dockerfile: Dockerfile.alpine.unpinned
  #         image: twdps/di-circleci-base-image
  #         tag: alpine-nightly
  #         docker-cve-scan: false
  #         snyk-organization: twdps
  #         cis-docker-image-scan: true
  #         skip-base-image: true
  #         bats-test: true
  #         test-path: test/di_circleci_base_image_alpine.bats
  #         container-name: di-circleci-base-image-alpine-edge
  #         after-checkout:
  #           - run:
  #               name: inject environment variables
  #               command: |
  #                 secrethub inject -i secrethub.env -o $BASH_ENV
  #                 source $BASH_ENV

  #     - executor-tools/machine-executor-dev-release:
  #         name: slim-nightly-build
  #         context: twdps-di
  #         dockerfile: Dockerfile.slim.unpinned
  #         image: twdps/di-circleci-base-image
  #         tag: slim-nightly
  #         bats-test: true
  #         test-path: test/di_circleci_base_image_slim.bats
  #         container-name: di-circleci-base-image-slim-edge
  #         after-checkout:
  #           - run:
  #               name: inject environment variables
  #               command: |
  #                 secrethub inject -i secrethub.env -o $BASH_ENV
  #                 source $BASH_ENV

